# -*- coding: utf-8 -*-
"""StrOprCon.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15MEP5d0o8MIblDLL72ES7QG01-TijLUw
"""

s1="good morning"
s1[:]

s1[::1]

s1[2::1]

s1[2:6:1]

s1="hello good morning peolpe"
len(s1)

print(s1[3])

s1[-4]

s1[-10]

#Boolean Expression (In Relational or Comparsion operators <,<=,>,>=,==,!=)
2==2
3>=2 #it print the 2nd value as true but if we give print function then both expression are printed

a=15
b=100   #All conditions are given in relational op useful to frame conditions
c=a>b
d=a<b
print(c,d,sep="   ***    ")

#Logical operator and,or,not 
1<2<3

1<2 and 2<3 #for and operator both should be true true shows true takes only single '&' or 'and' in jupyter shouldn't use symboles

1==1 or 3<2 #gives anyone is true shows true only single '/' or 'or'

a=2
b=3
c=4
d=5
print(b>a and c>b)
print(c>d or d>c)
print(not(c>d))

#Conditional Execution: if, if else, elif, nestedif
#instead of if(a<b) there is a 'if a<b:' this is the syntax of condition and also can be known by intation
#even for if else also semicolon should be given and for else there should be given'else:' intation is must for conditional execution
##if else program
a=int(input("enter the age of a persion"))   #Alternate exceution
if a>=18:
  print("the persion is elegible to vote")
else:
  print("not elegible to vote")
print("THIS IS ELECTION RULE") #This print function doesn't follow the intation so the python prints this print function 
#intation must follow

#Nested if (Lager of 3 numbers)
x=int(input("enter the X value"))
y=int(input("enter the Y value"))
z=int(input("enter the Z value"))
if x>y:
  if x>z:
   print(x,"is largest")        #Nested conditions
  else:
    print(z,"is largest")
else:
  if y>z:
    print(y,"is greater")
  else:
      print(z,"is greaTER")

X,Y,Z=10,20,30    #elif
if x>y and x>z:
  print("X is largest")    #Chained conditions
elif y>x and y>z:
  print("y is greater")
else:
  print("z is greater")

